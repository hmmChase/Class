{"version":3,"sources":["../../src/middleware/isAuth.js"],"names":["isAuth","secret","Buffer","from","process","env","ACCESS_TOKEN_SECRET","getToken","req","cookies","jwt","algorithms"],"mappings":";;;;;;;;;AAAA;;AAEO,IAAMA,MAAM,GAAG,4BAAI;AACxBC,EAAAA,MAAM,EAAEC,MAAM,CAACC,IAAP,CAAYC,OAAO,CAACC,GAAR,CAAYC,mBAAxB,EAA6C,QAA7C,CADgB;AAExB;AACA;AACAC,EAAAA,QAAQ,EAAE,kBAAAC,GAAG;AAAA,WAAIA,GAAG,CAACC,OAAJ,CAAYC,GAAhB;AAAA,GAJW;AAKxB;AACA;AACAC,EAAAA,UAAU,EAAE,CAAC,OAAD,CAPY,CASxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAnBwB,CAAJ,CAAf,C,CAsBP;AACA;AACA;AACA;AAEA;AACA;AAEA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import jwt from 'express-jwt';\r\n\r\nexport const isAuth = jwt({\r\n  secret: Buffer.from(process.env.ACCESS_TOKEN_SECRET, 'base64'),\r\n  // userProperty: 'jwt', // the encoded data now shows up in req.jwt\r\n  // requestProperty: 'user',\r\n  getToken: req => req.cookies.jwt,\r\n  // audience: 'http://myapi/protected',\r\n  // issuer: 'http://issuer',\r\n  algorithms: ['HS256']\r\n\r\n  // getToken: function fromHeaderOrQuerystring(req) {\r\n  //   if (\r\n  //     req.headers.authorization &&\r\n  //     req.headers.authorization.split(' ')[0] === 'Bearer'\r\n  //   ) {\r\n  //     return req.headers.authorization.split(' ')[1];\r\n  //   } else if (req.query && req.query.token) {\r\n  //     return req.query.token;\r\n  //   }\r\n  //   return null;\r\n  // }\r\n});\r\n\r\n// can also do it manually\r\n// app.get('/test', function (req, res) {\r\n//   var loginToken =\r\n//     req.headers.authentication || req.body.userToken || req.headers.Bearer;\r\n\r\n//   jsonwebtoken.verify(\r\n//     loginToken,\r\n\r\n//     new Buffer(process.env.ACCESS_TOKEN_SECRET, 'base64'),\r\n\r\n//     (err, decoded) => {\r\n//       if (err) return res.status(401).send({ message: 'invalid_token' });\r\n\r\n//       // be aware of encoded data structure\r\n//       // simply console.log(decoded) to see what it contains\r\n//       res.send(decoded); //`decoded.foo` has your value\r\n//     }\r\n//   );\r\n// });\r\n"],"file":"isAuth.js"}
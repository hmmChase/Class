{"version":3,"sources":["../../src/handlers/emailHandler.js"],"names":["transport","nodemailer","createTransport","host","port","auth","user","process","env","MAILTRAP_USER","pass","MAILTRAP_PASS","generateHTML","filename","options","ejs","renderFile","__dirname","html","sendEmail","emailHtml","mailOptions","from","to","email","subject","logger","info","sendMail","sendEmailSignup","username","sendEmailPasswordReset","resetPasswordUrl"],"mappings":";;;;;;;;;;;;;AAAA;;AACA;;AACA;;AACA;;AAEA,IAAMA,SAAS,GAAGC,uBAAWC,eAAX,CAA2B;AAC3CC,EAAAA,IAAI,EAAE,kBADqC;AAE3CC,EAAAA,IAAI,EAAE,MAFqC;AAG3CC,EAAAA,IAAI,EAAE;AAAEC,IAAAA,IAAI,EAAEC,OAAO,CAACC,GAAR,CAAYC,aAApB;AAAmCC,IAAAA,IAAI,EAAEH,OAAO,CAACC,GAAR,CAAYG;AAArD;AAHqC,CAA3B,CAAlB;;AAMA,IAAMC,YAAY;AAAA,2FAAG,iBAAOC,QAAP,EAAiBC,OAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBACAC,gBAAIC,UAAJ,WACdC,SADc,6BACcJ,QADd,WAEjBC,OAFiB,CADA;;AAAA;AACbI,YAAAA,IADa;AAAA,6CAOZ,uBAAMA,IAAN,CAPY;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAH;;AAAA,kBAAZN,YAAY;AAAA;AAAA;AAAA,GAAlB,C,CAUA;AACA;AACA;AAEA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEO,IAAMO,SAAS;AAAA,4FAAG,kBAAML,OAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBACCF,YAAY,CAACE,OAAO,CAACD,QAAT,EAAmBC,OAAnB,CADb;;AAAA;AACjBM,YAAAA,SADiB;AAGjBC,YAAAA,WAHiB,GAGH;AAClBC,cAAAA,IAAI,EAAE,4CADY;AAElBC,cAAAA,EAAE,EAAET,OAAO,CAACR,IAAR,CAAakB,KAFC;AAGlBC,cAAAA,OAAO,EAAEX,OAAO,CAACW,OAHC;AAIlBP,cAAAA,IAAI,EAAEE;AAJY,aAHG;;AAUvBM,mCAAOC,IAAP,mCAAuCb,OAAO,CAACW,OAA/C;;AAVuB,8CAYhBzB,SAAS,CAAC4B,QAAV,CAAmBP,WAAnB,CAZgB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAH;;AAAA,kBAATF,SAAS;AAAA;AAAA;AAAA,GAAf;;;;AAeA,IAAMU,eAAe,GAAG,SAAlBA,eAAkB,CAACC,QAAD,EAAWN,KAAX,EAAqB;AAClD,MAAMV,OAAO,GAAG;AACdW,IAAAA,OAAO,EAAE,iCADK;AAEdZ,IAAAA,QAAQ,EAAE,aAFI;AAGdP,IAAAA,IAAI,EAAE;AAAEwB,MAAAA,QAAQ,EAARA,QAAF;AAAYN,MAAAA,KAAK,EAALA;AAAZ;AAHQ,GAAhB;AAMAL,EAAAA,SAAS,CAACL,OAAD,CAAT;AACD,CARM;;;;AAUA,IAAMiB,sBAAsB,GAAG,SAAzBA,sBAAyB,CAACP,KAAD,EAAQQ,gBAAR,EAA6B;AACjEb,EAAAA,SAAS,CAAC;AACRM,IAAAA,OAAO,EAAE,wCADD;AAERZ,IAAAA,QAAQ,EAAE,gBAFF;AAGRP,IAAAA,IAAI,EAAE;AAAEkB,MAAAA,KAAK,EAALA;AAAF,KAHE;AAIRQ,IAAAA,gBAAgB,EAAhBA;AAJQ,GAAD,CAAT;AAMD,CAPM","sourcesContent":["import nodemailer from 'nodemailer';\r\nimport ejs from 'ejs';\r\nimport juice from 'juice';\r\nimport logger from './logHandler';\r\n\r\nconst transport = nodemailer.createTransport({\r\n  host: 'smtp.mailtrap.io',\r\n  port: '2525',\r\n  auth: { user: process.env.MAILTRAP_USER, pass: process.env.MAILTRAP_PASS }\r\n});\r\n\r\nconst generateHTML = async (filename, options) => {\r\n  const html = await ejs.renderFile(\r\n    `${__dirname}/../views/email/${filename}.ejs`,\r\n    options\r\n  );\r\n\r\n  // juice will inline the CSS for us in case we import CSS into our email views\r\n  return juice(html);\r\n};\r\n\r\n// // using Twilio SendGrid's v3 Node.js Library\r\n// // https://github.com/sendgrid/sendgrid-nodejs\r\n// // javascript;\r\n\r\n// const sgMail = require('@sendgrid/mail');\r\n\r\n// sgMail.setApiKey(process.env.SENDGRID_API_KEY);\r\n\r\n// const msg = {\r\n//   to: 'test@example.com', // Change to your recipient\r\n//   from: 'test@example.com', // Change to your verified sender\r\n//   subject: 'Sending with SendGrid is Fun',\r\n//   text: 'and easy to do anywhere, even with Node.js',\r\n//   html: '<strong>and easy to do anywhere, even with Node.js</strong>'\r\n// };\r\n\r\n// sgMail\r\n//   .send(msg)\r\n//   .then(() => {\r\n//     console.log('Email sent');\r\n//   })\r\n//   .catch(error => {\r\n//     console.error(error);\r\n//   });\r\n\r\nexport const sendEmail = async options => {\r\n  const emailHtml = await generateHTML(options.filename, options);\r\n\r\n  const mailOptions = {\r\n    from: 'Challenge Board <challengeboard@email.com>',\r\n    to: options.user.email,\r\n    subject: options.subject,\r\n    html: emailHtml\r\n  };\r\n\r\n  logger.info(`sending email, subject: ${options.subject}`);\r\n\r\n  return transport.sendMail(mailOptions);\r\n};\r\n\r\nexport const sendEmailSignup = (username, email) => {\r\n  const options = {\r\n    subject: 'Welcome to the Challange Board!',\r\n    filename: 'signupEmail',\r\n    user: { username, email }\r\n  };\r\n\r\n  sendEmail(options);\r\n};\r\n\r\nexport const sendEmailPasswordReset = (email, resetPasswordUrl) => {\r\n  sendEmail({\r\n    subject: 'Password Reset for the Challenge Board',\r\n    filename: 'resetPassEmail',\r\n    user: { email },\r\n    resetPasswordUrl\r\n  });\r\n};\r\n"],"file":"emailHandler.js"}
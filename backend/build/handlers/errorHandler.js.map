{"version":3,"sources":["../../src/handlers/errorHandler.js"],"names":["CustomError","error","name","status","Error","captureStackTrace","handleErrors","fn","req","res","next","developmentErrors","err","stack","errorDetails","message","logger","json","productionErrors","notFound"],"mappings":";;;;;;;;;;;;;;;;;;;;;AAAA;;;;;;IAEaA,W;;;;;AACX,uBAAYC,KAAZ,EAAmBC,IAAnB,EAAyBC,MAAzB,EAAiC;AAAA;;AAAA;AAC/B;AACA,8BAAMF,KAAN,EAF+B,CAI/B;;AACA,QAAIG,KAAK,CAACC,iBAAV,EAA6BD,KAAK,CAACC,iBAAN,iDAA8BL,WAA9B;AAE7B,UAAKE,IAAL,GAAYA,IAAZ;AACA,UAAKC,MAAL,GAAcA,MAAd;AAR+B;AAShC;;;kDAV8BC,K;;;;AAa1B,IAAME,YAAY,GAAG,SAAfA,YAAe,CAAAC,EAAE;AAAA,SAAI,UAACC,GAAD,EAAMC,GAAN,EAAWC,IAAX;AAAA,WAChCH,EAAE,CAACC,GAAD,EAAMC,GAAN,EAAWC,IAAX,CAAF,UAAyBA,IAAzB,CADgC;AAAA,GAAJ;AAAA,CAAvB;;;;AAGA,IAAMC,iBAAiB,GAAG,SAApBA,iBAAoB,CAACC,GAAD,EAAMJ,GAAN,EAAWC,GAAX,EAAgBC,IAAhB,EAAyB;AACxDE,EAAAA,GAAG,CAACC,KAAJ,GAAYD,GAAG,CAACC,KAAJ,IAAa,EAAzB;AAEA,MAAMC,YAAY,GAAG;AACnBZ,IAAAA,IAAI,EAAEU,GAAG,CAACV,IADS;AAEnBC,IAAAA,MAAM,EAAES,GAAG,CAACT,MAFO;AAGnBF,IAAAA,KAAK,EAAEW,GAAG,CAACG,OAHQ;AAInBF,IAAAA,KAAK,EAAED,GAAG,CAACC;AAJQ,GAArB;;AAOAG,yBAAOf,KAAP,CAAaW,GAAb;;AAEA,SAAOH,GAAG,CAACN,MAAJ,CAAWS,GAAG,CAACT,MAAJ,IAAc,GAAzB,EAA8Bc,IAA9B,CAAmCH,YAAnC,CAAP;AACD,CAbM;;;;AAeA,IAAMI,gBAAgB,GAAG,SAAnBA,gBAAmB,CAACN,GAAD,EAAMJ,GAAN,EAAWC,GAAX,EAAgBC,IAAhB,EAAyB;AACvDM,yBAAOf,KAAP,CAAaW,GAAb;;AAEA,MAAME,YAAY,GAAG;AAAEZ,IAAAA,IAAI,EAAEU,GAAG,CAACV,IAAZ;AAAkBD,IAAAA,KAAK,EAAEW,GAAG,CAACG;AAA7B,GAArB;AAEA,SAAON,GAAG,CAACN,MAAJ,CAAWS,GAAG,CAACT,MAAJ,IAAc,GAAzB,EAA8Bc,IAA9B,CAAmCH,YAAnC,CAAP;AACD,CANM;;;;AAQA,IAAMK,QAAQ,GAAG,SAAXA,QAAW,CAACX,GAAD,EAAMC,GAAN,EAAWC,IAAX,EAAoB;AAC1C,MAAME,GAAG,GAAGR,KAAK,CAAC,iBAAD,CAAjB;AAEAQ,EAAAA,GAAG,CAACT,MAAJ,GAAa,GAAb;;AAEAa,yBAAOf,KAAP,CAAaW,GAAb;;AAEAF,EAAAA,IAAI,CAACE,GAAD,CAAJ;AACD,CARM,C,CAUP;AACA","sourcesContent":["import logger from './logHandler.js';\r\n\r\nexport class CustomError extends Error {\r\n  constructor(error, name, status) {\r\n    // Pass remaining arguments (including vender specific ones) to parent constructor\r\n    super(error);\r\n\r\n    // Maintains proper stack trace for where our error was thrown (node v8)\r\n    if (Error.captureStackTrace) Error.captureStackTrace(this, CustomError);\r\n\r\n    this.name = name;\r\n    this.status = status;\r\n  }\r\n}\r\n\r\nexport const handleErrors = fn => (req, res, next) =>\r\n  fn(req, res, next).catch(next);\r\n\r\nexport const developmentErrors = (err, req, res, next) => {\r\n  err.stack = err.stack || '';\r\n\r\n  const errorDetails = {\r\n    name: err.name,\r\n    status: err.status,\r\n    error: err.message,\r\n    stack: err.stack\r\n  };\r\n\r\n  logger.error(err);\r\n\r\n  return res.status(err.status || 500).json(errorDetails);\r\n};\r\n\r\nexport const productionErrors = (err, req, res, next) => {\r\n  logger.error(err);\r\n\r\n  const errorDetails = { name: err.name, error: err.message };\r\n\r\n  return res.status(err.status || 500).json(errorDetails);\r\n};\r\n\r\nexport const notFound = (req, res, next) => {\r\n  const err = Error('server.notFound');\r\n\r\n  err.status = 404;\r\n\r\n  logger.error(err);\r\n\r\n  next(err);\r\n};\r\n\r\n// 403 = user record not found\r\n// 401 = wrong password\r\n"],"file":"errorHandler.js"}